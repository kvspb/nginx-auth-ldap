#
# This example shows how authenticate against a FreeIPA server with this project.
#
# You must update url, bindn, binddn_passwd, and the require (user|group) sections to
#   to match your setup.
#
worker_processes  1;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    # define ldap server
    ldap_server ad_1 {
    
      # user search base.
      url "ldaps://freeipa01.example.com/cn=users,cn=accounts,dc=example,dc=com?uid?sub?(objectClass=person)";
      
      # bind as IPA user "ldapauth4myapplication"
      binddn "uid=ldapauth4myapplication,cn=users,cn=accounts,dc=example,dc=com";
      
      # bind pw
      binddn_passwd "put-the-password-for-binddn-account-here";

      # group attribute name which contains member object
      group_attribute member;
      # search for full DN in member object
      group_attribute_is_dn on;
      # matching algorithm (any / all)
      satisfy any;
      # list of allowed groups
      require group "cn=myapplication,cn=groups,cn=accounts,dc=example,dc=com";
      require group "cn=myapplicationadmin,cn=groups,cn=accounts,dc=example,dc=com";
      # list of allowed users
      # require 'valid_user' cannot be used together with 'user' as valid user is a superset
      # require valid_user;
      require user "cn=appadmin,cn=users,cn=accounts,dc=example,dc=com";
      require user "cn=zbeeblebrox,cn=users,cn=accounts,dc=example,dc=com";
    }

}

server {
  listen       8081;
  server_name  localhost;

  location / {
    # adding ldap authentication
    auth_ldap "Closed content";
    auth_ldap_servers ad_1;

    root html;
    index index.html index.htm;
  }

  error_page   500 502 503 504  /50x.html;

  location = /50x.html {
    root html;
  }
}
